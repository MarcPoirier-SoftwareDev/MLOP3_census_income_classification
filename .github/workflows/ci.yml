# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 #pytest pandas scikit-learn fastapi httpx
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3
    - name: Downloads DVC artifacts
      run: dvc pull --verbose
    - name: Check pulled artifacts
      run: |
        ls -lh data/ model/  # List file sizes
        if [ -f data/census_clean.csv ]; then
          head -n 5 data/census_clean.csv  # Show first few lines
          wc -l data/census_clean.csv  # Count lines (should be ~32k+ for full dataset)
        else
          echo "census_clean.csv missing!"
        fi
        if [ -f data/census.csv ]; then
          head -n 5 data/census.csv
          wc -l data/census.csv
        else
          echo "census.csv missing!"
        fi
    - name: Debug Census Data
      run: |
        python -c "
        import pandas as pd
        df = pd.read_csv('data/census_clean.csv')
        print('Column names:', list(df.columns))
        print('Unique salary values:', df['salary'].unique())
        print('Salary value counts:\\n', df['salary'].value_counts())
        print('First salary value (raw):', repr(df['salary'].iloc[0]))  # Shows exact string with spaces
        print('Rows matching \\' >50K\\':', len(df[df['salary'] == ' >50K']))
        print('Rows matching \\'>50K\\':', len(df[df['salary'] == '>50K']))
        print('Rows matching \\' <=50K\\':', len(df[df['salary'] == ' <=50K']))
        print('Rows matching \\'<=50K\\':', len(df[df['salary'] == '<=50K']))
        "
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run server in background
      run: uvicorn main:app &
    - name: Run tests and generate coverage report
      run: pytest --cov=. --cov-report=xml:coverage.xml  # Generates coverage.xml; adjust --cov= to your package if needed (e.g., --cov=src)
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true  # Optional: For more debug logs
        fail_ci_if_error: true  # Optional: Fail the build if upload fails
